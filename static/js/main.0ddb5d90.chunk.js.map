{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","useEffect","handleKeyPress","event","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAeA,OAbAC,qBAAU,WACR,IAAMC,EAAiB,SAACC,GACtBH,EAAOG,EAAMJ,MAMf,OAFAK,SAASC,iBAAiB,QAASH,GAE5B,WACLE,SAASE,oBAAoB,QAASJ,OAKxC,mCACGH,EACC,qBAAKQ,UAAU,eAAf,4CAA2DR,EAA3D,OAEA,qBAAKQ,UAAU,eAAf,wC,MClBRC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.0ddb5d90.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      setKey(event.key);\n      // console.log(event.key);\n    };\n\n    document.addEventListener('keyup', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress);\n    };\n  });\n\n  return (\n    <>\n      {key ? (\n        <div className=\"App__message\">{`The last pressed key is [${key}]`}</div>\n      ) : (\n        <div className=\"App__message\">Nothing was pressed yet</div>\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
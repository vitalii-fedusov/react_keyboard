{"version":3,"sources":["ClassComponent/LastPressedKey2/LastPressedKey2.tsx","FunctionalComponent/LastPressedKey.tsx","App.tsx","index.tsx"],"names":["LastPressedKey2","state","key","handleKeyPress","event","setState","document","addEventListener","this","removeEventListener","className","React","PureComponent","LastPressedKey","useState","setKey","useEffect","App","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAFT,EAcEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAf/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,kBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,kBAV/C,oBAkBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,8BACIA,EAGA,mBAAGQ,UAAU,eAAb,4CAAyDR,EAAzD,OAFA,8DAxBV,GAAqCS,IAAMC,e,OCJ9BC,EAA2B,WACtC,MAAsBC,mBAAS,IAA/B,mBAAOZ,EAAP,KAAYa,EAAZ,KAcA,OAZAC,qBAAU,WACR,IAAMb,EAAiB,SAACC,GACtBW,EAAOX,EAAMF,MAKf,OAFAI,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASG,oBAAoB,QAASN,OAKxC,8BACID,EAGA,mBAAGQ,UAAU,eAAb,4CAAyDR,EAAzD,OAFA,2DCfKe,EAAgB,kBAC3B,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCHJQ,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.e61bfe92.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class LastPressedKey2 extends React.PureComponent<{}, State> {\n  state: State = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n    // console.log('componentWillUnmount LastPressedKey2');\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div>\n        {!key ? (\n          <p>Nothing was pressed yet</p>\n        ) : (\n          <p className=\"App__message\">{`The last pressed key is [${key}]`}</p>\n        )}\n      </div>\n    );\n  }\n}\n","import { useEffect, useState } from 'react';\n\nexport const LastPressedKey: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      setKey(event.key);\n    };\n\n    document.addEventListener('keyup', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress);\n    };\n  });\n\n  return (\n    <div>\n      {!key ? (\n        <p>Nothing was pressed yet</p>\n      ) : (\n        <p className=\"App__message\">{`The last pressed key is [${key}]`}</p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n// eslint-disable-next-line max-len\nimport { LastPressedKey2 } from './ClassComponent/LastPressedKey2/LastPressedKey2';\nimport { LastPressedKey } from './FunctionalComponent/LastPressedKey';\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <LastPressedKey2 />\n    <LastPressedKey />\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}